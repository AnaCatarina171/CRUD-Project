@model DBProgramming3.Models.Product

@{
    ViewBag.Title = "AddOrUpdateProduct";
}

<link rel="stylesheet" href="~/Content/AddEditPage.css" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;500;600;800&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
<script defer src="~/Content/JavaScript.js"></script>

<div class="returnContainer row">
    <a href="/Product/ProductList" class="returnLink"><i class="fa fa-arrow-left"></i> &nbsp; Return to Products</a>
</div>

<div class="row">
    <h2 class="mainHeader">Edit @Model.Name Product</h2>
</div>

@using (Html.BeginForm("AddOrUpdateProduct", "Product", FormMethod.Post, new { @class = "formEditElement" }))
{
    <div class="row">
        <div class="col-md-12 addElementContainer">
            <div>
                <div class="row">
                    <div class="col-md-3">
                        <label>Code:&nbsp;</label>@Html.TextBoxFor(p => p.ProductCode, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        <label>Name:&nbsp;</label>@Html.TextBoxFor(p => p.Name, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        <label>Version:&nbsp;</label>@Html.TextBoxFor(p => p.Version, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        <label>Release Date:&nbsp;</label>@Html.TextBoxFor(p => p.ReleaseDate, new
                        {
                            @class = "form-control",
                            type = "date",
                            @Value = DateTime.Today.ToShortDateString()
                        })
                    </div>
                </div>
            </div>
        </div>
        <input type="submit" value="Submit" class="btnStyled" id="btnSubmitNewState" />
    </div>
}

<div class="row">
    <h3 class="normalHeader">Other Details</h3>
</div>
<div class="row">
    <div class="col-md-4">
        <div class="otherDetailsBox">
            <h4>Incidents</h4>
            <p class="numbers"># @Model.Incidents.Count()</p>
            @if (@Model.Incidents.Count() > 0)
            {
                <p>@Html.ActionLink("Go To Incidents", "elementIncidents", "Incident", 
                  new { identification = Model.ProductCode, obj = "Product", name = Model.Name}, 
                  new { @class = "detailsLink" })</p>
            }
            else
            {
                <p>No Incident</p>
            }
        </div>
    </div>
    <div class="col-md-4">
        <div class="otherDetailsBox">
            <h4>Registrations</h4>
            <p class="numbers"># @Model.Registrations.Count()</p>
            @if (Model.Registrations.Count() > 0)
            {
                <p>
                    @Html.ActionLink("Go To Registrations", "elementRegistrations", "Registration",
                       new { identification = Model.ProductCode, obj = "Product", name = Model.Name },
                       new { @class = "detailsLink" })
                </p>
            }
            else
            {
                <p>No Registration</p>
            }
        </div>
    </div>
<div class="col-md-4">
    <form method="post" action="/Product/Delete" class="formDeleteElement">
        <input type="text" id="txtProductCode" name="txtProducCode" value="@Model.ProductCode" style="display:none" />
        <input type="submit" value="Delete Product" class="deleteBtnStyled" />
    </form>
</div>
</div>
